<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Jack Q Blog</title>
  
  <link href="/blog/atom.xml" rel="self"/>
  
  <link href="https://jack-q.github.io/blog/"/>
  <updated>2017-05-30T12:23:25.333Z</updated>
  <id>https://jack-q.github.io/blog/</id>
  
  <author>
    <name>Jack Q</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>DOT language for graph</title>
    <link href="https://jack-q.github.io/blog/2017/05/30/dot-language-for-graph/"/>
    <id>https://jack-q.github.io/blog/2017/05/30/dot-language-for-graph/</id>
    <published>2017-05-30T14:57:26.000Z</published>
    <updated>2017-05-30T12:23:25.333Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;GraphViz package is a set of tools to describe, automatically layout and manipulate graphs, which 
is of great significance in connection and relationship analysis and illustration.
The core module of GraphViz is the layout and render engines which generate 
neat and elegant visualization of graph in various common formats from 
a descriptive small language (the graph file language or the &lt;em&gt;DOT&lt;/em&gt; language). This post will represent a brief introduction
of the DOT language and show some applications that utilize the power of GraphViz.&lt;/p&gt;
    
    </summary>
    
    
      <category term="visualization" scheme="https://jack-q.github.io/blog/tags/visualization/"/>
    
      <category term="GraphViz" scheme="https://jack-q.github.io/blog/tags/graphviz/"/>
    
  </entry>
  
  <entry>
    <title>Simple Visualization in Python</title>
    <link href="https://jack-q.github.io/blog/2017/04/07/simple-visualization-in-python/"/>
    <id>https://jack-q.github.io/blog/2017/04/07/simple-visualization-in-python/</id>
    <published>2017-04-07T10:44:58.000Z</published>
    <updated>2017-05-30T10:17:25.785Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;Visualization of data or graph can be achieved by a variety of means in Python. This post list 
configuration for some simple visualizations. Before introduction of some visualization package,
I’ll list some procedures for configure and launch the Jupyter notebook, which is a convenient
environment for testing Python code.&lt;/p&gt;
    
    </summary>
    
    
      <category term="python" scheme="https://jack-q.github.io/blog/tags/python/"/>
    
      <category term="visualization" scheme="https://jack-q.github.io/blog/tags/visualization/"/>
    
  </entry>
  
  <entry>
    <title>Setup LaTeX environment</title>
    <link href="https://jack-q.github.io/blog/2017/03/26/setup-latex-environment/"/>
    <id>https://jack-q.github.io/blog/2017/03/26/setup-latex-environment/</id>
    <published>2017-03-26T06:38:07.000Z</published>
    <updated>2017-05-16T14:22:52.327Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;After a reinstallation of ubuntu in last month, the original installation
of texlive 2015 was gone. As the 2016 release of texlive is already available 
to use, I decided to install the newer version on Ubuntu 16.04 LTS. This 
post records the steps of installation as well as some other 
configurations to several dedicated components.&lt;/p&gt;
    
    </summary>
    
    
      <category term="installation" scheme="https://jack-q.github.io/blog/tags/installation/"/>
    
      <category term="tex" scheme="https://jack-q.github.io/blog/tags/tex/"/>
    
  </entry>
  
  <entry>
    <title>Setup R environment</title>
    <link href="https://jack-q.github.io/blog/2017/03/25/setup-r-environment/"/>
    <id>https://jack-q.github.io/blog/2017/03/25/setup-r-environment/</id>
    <published>2017-03-25T05:08:52.000Z</published>
    <updated>2017-03-26T15:36:08.161Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;This post is to record the configuration steps of the R environment, 
which is a language as well as an eco-system for statistics and related 
computing and graphing. With the CRAN platform for sharing and exploring
extra package of R, the capibility of the R language is much more extented.&lt;/p&gt;
    
    </summary>
    
    
      <category term="R" scheme="https://jack-q.github.io/blog/tags/r/"/>
    
      <category term="installation" scheme="https://jack-q.github.io/blog/tags/installation/"/>
    
  </entry>
  
  <entry>
    <title>JavaEE Training Note - Day 18</title>
    <link href="https://jack-q.github.io/blog/2017/03/12/javaee-training-note-day-18/"/>
    <id>https://jack-q.github.io/blog/2017/03/12/javaee-training-note-day-18/</id>
    <published>2017-03-12T06:16:12.000Z</published>
    <updated>2017-03-16T06:17:42.728Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;Continued to the last post about the security settings related to website or 
web service, today’s topic is another vital security configuration for website,
which is the HTTP traffic over security socket layer (HHTTP-SSL, HTTPS). 
Without the companient of the HTTPS configuration, either token based approach 
or the session based approach will become vulnerable to the package sniffers 
in the middle of the whole transfer processes.&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>JavaEE Training Note - Day 17</title>
    <link href="https://jack-q.github.io/blog/2017/03/10/javaee-training-note-day-17/"/>
    <id>https://jack-q.github.io/blog/2017/03/10/javaee-training-note-day-17/</id>
    <published>2017-03-10T06:10:58.000Z</published>
    <updated>2017-03-16T06:15:50.130Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;After building the core functionality of the project, the next step is to 
create an interface for the application to interact with the outter world.
However, in an open network, there are always unintented attempts to access 
our application without the authorization. Therefore, web application are 
always require authentication and authorization to secure itself. In this 
application, there are two modules used to secure different kinds of interfaces.&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>JavaEE Training Note - Day 16</title>
    <link href="https://jack-q.github.io/blog/2017/03/09/javaee-training-note-day-16/"/>
    <id>https://jack-q.github.io/blog/2017/03/09/javaee-training-note-day-16/</id>
    <published>2017-03-09T00:10:35.000Z</published>
    <updated>2017-03-10T01:26:44.084Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;Today’s topic is about some debugging methods and toolkit used
to solve problems. One is the &lt;code&gt;tcpdump&lt;/code&gt; and other terminal 
tools for remote package sniffer and traffic analysis. Another is
some wired errors occured in the development progress of project.&lt;/p&gt;
    
    </summary>
    
    
      <category term="network" scheme="https://jack-q.github.io/blog/tags/network/"/>
    
  </entry>
  
  <entry>
    <title>JavaEE Training Note - Day 15</title>
    <link href="https://jack-q.github.io/blog/2017/03/08/javaee-training-note-day-15/"/>
    <id>https://jack-q.github.io/blog/2017/03/08/javaee-training-note-day-15/</id>
    <published>2017-03-08T00:32:39.000Z</published>
    <updated>2017-03-16T06:20:42.378Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;Today’s topic is some compainent library uesd together with ReactJS.
The React Motion is a UX improvement library named React Motion, which 
provides supports to transition animation.&lt;/p&gt;
    
    </summary>
    
    
      <category term="react" scheme="https://jack-q.github.io/blog/tags/react/"/>
    
  </entry>
  
  <entry>
    <title>JavaEE Training Note - Day 14</title>
    <link href="https://jack-q.github.io/blog/2017/03/07/javaee-training-note-day-14/"/>
    <id>https://jack-q.github.io/blog/2017/03/07/javaee-training-note-day-14/</id>
    <published>2017-03-07T15:05:13.000Z</published>
    <updated>2017-03-09T00:10:50.351Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;Today’s topic is continued to the day before yesterday. It is still about the ReactJS framework.
Based on the start point created on that day, today is to create the first component and then 
introduce the React Router library to solving the problem of routing inside the whole client 
side application in React.&lt;/p&gt;
    
    </summary>
    
    
      <category term="react" scheme="https://jack-q.github.io/blog/tags/react/"/>
    
  </entry>
  
  <entry>
    <title>JavaEE Training Note - Day 13</title>
    <link href="https://jack-q.github.io/blog/2017/03/06/javaee-training-note-day-13/"/>
    <id>https://jack-q.github.io/blog/2017/03/06/javaee-training-note-day-13/</id>
    <published>2017-03-06T02:53:12.000Z</published>
    <updated>2017-03-07T16:06:26.355Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;Today’s topic is some tips to the solution to the problems in 
deveploment, varying from the frontend development to backend 
presistence technology. &lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>JavaEE Training Note - Day 12</title>
    <link href="https://jack-q.github.io/blog/2017/03/04/javaee-training-note-day-12/"/>
    <id>https://jack-q.github.io/blog/2017/03/04/javaee-training-note-day-12/</id>
    <published>2017-03-04T13:43:19.000Z</published>
    <updated>2017-03-07T16:06:42.888Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;A website (as well as other types of web applications) is gnenrally composited 
of frontend interface and backend service provider. Traditionally, when the website 
is the most fancy application of web, the frontend is static html pages genrated 
by http server. However, in the recent years, the AJAX technology and mobile platform
driven some kinds of new applications. The Single Page Application (SPA) is 
an envolved version of the original web page which is performed like a local application
while requires no binary installation process. Today’s topic is related to the 
ReactJS framework, a frontend solution to manage the SPA and more.&lt;/p&gt;
    
    </summary>
    
    
      <category term="react" scheme="https://jack-q.github.io/blog/tags/react/"/>
    
  </entry>
  
  <entry>
    <title>JavaEE Training Note - Day 11</title>
    <link href="https://jack-q.github.io/blog/2017/03/03/javaee-training-note-day-11/"/>
    <id>https://jack-q.github.io/blog/2017/03/03/javaee-training-note-day-11/</id>
    <published>2017-03-03T14:34:50.000Z</published>
    <updated>2017-03-05T13:53:30.648Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;Tosay’s topic is related to configuration of service in remote Linux server.
The target server is an ubuntu server 16.04. Following are some of configuration
steps.&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>JavaEE Training Note - Day 10</title>
    <link href="https://jack-q.github.io/blog/2017/03/02/javaee-training-note-day-10/"/>
    <id>https://jack-q.github.io/blog/2017/03/02/javaee-training-note-day-10/</id>
    <published>2017-03-02T13:13:39.000Z</published>
    <updated>2017-03-05T13:53:38.920Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;From this day, the training schedule goes to the coding stage of 
the development project. There will be no central topic of the notes,
but a set of records of problems and technics. &lt;/p&gt;
    
    </summary>
    
    
      <category term="java" scheme="https://jack-q.github.io/blog/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>JavaEE Training Note - Day 09</title>
    <link href="https://jack-q.github.io/blog/2017/03/01/javaee-training-note-day-09/"/>
    <id>https://jack-q.github.io/blog/2017/03/01/javaee-training-note-day-09/</id>
    <published>2017-03-01T09:53:56.000Z</published>
    <updated>2017-03-05T13:53:48.267Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;Test is always one of the major steps in software enginering.
which is today’s topic. Some basic concepts is introduced 
several days ago when introdcing the unit test supporting in 
Spring MVC framework. Today’s point is related to the managment 
and theory approach of the test.&lt;/p&gt;
    
    </summary>
    
    
      <category term="java" scheme="https://jack-q.github.io/blog/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>JavaEE Training Note - Day 08</title>
    <link href="https://jack-q.github.io/blog/2017/02/28/javaee-training-note-day-08/"/>
    <id>https://jack-q.github.io/blog/2017/02/28/javaee-training-note-day-08/</id>
    <published>2017-02-28T12:25:27.000Z</published>
    <updated>2017-03-05T13:54:02.839Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;The topic of today is the fundamental of web application and the server.
The concepts introduced today is the low level basis of the fancy and 
colorful world of the Internet. Besides the general concepts, the nginx
server also introduced.&lt;/p&gt;
    
    </summary>
    
    
      <category term="java" scheme="https://jack-q.github.io/blog/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>JavaEE Training Note - Day 07</title>
    <link href="https://jack-q.github.io/blog/2017/02/27/javaee-training-note-day-07/"/>
    <id>https://jack-q.github.io/blog/2017/02/27/javaee-training-note-day-07/</id>
    <published>2017-02-27T12:06:20.000Z</published>
    <updated>2017-03-05T14:09:09.082Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;Today’s topics are the automatic unit test in Spring MVC and 
the code refactoring in Java. The former is to fully empower the 
test in Java based project, while the latter is to keep a essential 
approach about improving the quality of the source code.&lt;/p&gt;
    
    </summary>
    
    
      <category term="java" scheme="https://jack-q.github.io/blog/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>JavaEE Training Note - Day 06</title>
    <link href="https://jack-q.github.io/blog/2017/02/25/javaee-training-note-day-06/"/>
    <id>https://jack-q.github.io/blog/2017/02/25/javaee-training-note-day-06/</id>
    <published>2017-02-25T01:52:43.000Z</published>
    <updated>2017-03-04T01:21:27.853Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;Today’s topic is configuration management which is mainly the source code management and versoin control.
One of the famous solution for source code management is the &lt;code&gt;Subversion&lt;/code&gt; (abbr. svn),
a centralized version control system. It is common in enterprise development with an always-on
central configuration management server as an authority (the &lt;code&gt;trunk&lt;/code&gt;). Another popular solution is 
&lt;code&gt;git&lt;/code&gt;, a de-centralized version control system. It is common in open source project development and each 
contributor can hold their own branch.&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>JavaEE Training Note - Day 05</title>
    <link href="https://jack-q.github.io/blog/2017/02/24/javaee-training-note-day-05/"/>
    <id>https://jack-q.github.io/blog/2017/02/24/javaee-training-note-day-05/</id>
    <published>2017-02-24T00:42:37.000Z</published>
    <updated>2017-03-04T01:21:17.597Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;A website is a user oriented application which will represent a friendly
interface to its end user. Nowadays, the browser based webpage is still
the most important interface represented to user. Based on the 
current application with integrated Spring, Spring MVC and Hibernate,
some issues related to the front end is the main topic of today’s schedule.&lt;/p&gt;
    
    </summary>
    
    
      <category term="Java" scheme="https://jack-q.github.io/blog/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>JavaEE Training Note - Day 04</title>
    <link href="https://jack-q.github.io/blog/2017/02/23/javaee-training-note-day-04/"/>
    <id>https://jack-q.github.io/blog/2017/02/23/javaee-training-note-day-04/</id>
    <published>2017-02-23T01:12:20.000Z</published>
    <updated>2017-02-23T12:45:00.102Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;Today’s first topic is the bi-directional communication with
WebSocket using Spring Framework. By using the &lt;code&gt;SockJS&lt;/code&gt; library as well as support on 
server side, some other techniques including the XHR polling and
XHR streaming are provided as fallbacks. The STOMP is a sub-protocol 
under the WebSocket protocol, which use Pub/Sub pattern to manage messages.
Another topic of today is integration of Hibernate into Spring MVC.&lt;/p&gt;
    
    </summary>
    
    
      <category term="Java" scheme="https://jack-q.github.io/blog/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>JavaEE Training Note - Day 03</title>
    <link href="https://jack-q.github.io/blog/2017/02/22/javaee-training-note-day-03/"/>
    <id>https://jack-q.github.io/blog/2017/02/22/javaee-training-note-day-03/</id>
    <published>2017-02-22T09:44:32.000Z</published>
    <updated>2017-02-22T15:39:46.334Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;Continued on the introduction to &lt;code&gt;Servlet&lt;/code&gt; and &lt;code&gt;Spring MVC&lt;/code&gt; library, the main 
content of the third day is detailed illustration of web site using 
&lt;code&gt;Spring MVC&lt;/code&gt;. Another main point is the &lt;code&gt;Hibernate ORM&lt;/code&gt; library which is used 
to unify and simplify the process of database connection and data transaction.&lt;/p&gt;
    
    </summary>
    
    
      <category term="Java" scheme="https://jack-q.github.io/blog/tags/java/"/>
    
  </entry>
  
</feed>
