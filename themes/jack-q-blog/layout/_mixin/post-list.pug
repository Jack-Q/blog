mixin post-list(posts)
  .post-list-container(role="main")
    .post-list-head
      if is_home()
        .welcome 
          .text Welcome
          .desp
            ul
              li Located at  
                a(href="https://git.io/jackq", target="_blank") git.io/jackq
              li #[em #{site.posts.length} posts] in total
              - let lastUpdated = site.posts.toArray().map(p=>p.updated).sort((a,b)=>-a.diff(b))[0]
              li Updated at #[em #{lastUpdated.format("YYYY-MM-DD")}]
              li Powered by 
                a(href="https://hexo.io/", target="_blank") HEXO
              li Hosted on 
                a(href="https://github.io/", target="_blank") GitHub.io 
      if is_archive()
        .archive
          - let archive_date = moment(`${page.year}-${page.month}`, 'YYYY-MM');
          .text posts in #[em #{archive_date.format('MMM')}], #[em #{archive_date.format('YYYY')}]
      if is_tag()
        .tag
          .text posts with tag #[em #{page.tag}]
      if is_category()
        .category
          .text posts in category #[em #{page.category}]

    each post in (posts.toArray ? posts.toArray() : posts)
      .post-list-post
        a(href=url_for(post.path), 'data-smooth', 'data-smooth-type'='post')
          .title= post.title
          .date= post.date.format('YYYY-MM-DD')
          //- .updated= post.updated.format('YYYY-MM-DD')
          .excerpt!= strip_html(post.excerpt)
          .more 
    .post-list-pagination
      .text  
        if page.total > 1
          if page.current === 1
            span.first
          else if page.current === page.total
            span.last
          else
            span.cur= page.current
          span.total= page.total
        else
          span.one
      if page.next + page.prev > 0
        .action
          if page.prev > 0
            a.prev(href=url_for(page.prev_link), 'data-smooth', 'data-smooth-type'='list') Prev Page
          if page.next > 0
            a.next(href=url_for(page.next_link), 'data-smooth', 'data-smooth-type'='list') Next Page